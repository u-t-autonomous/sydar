# optional
constants # kind of like #define's, should be doubles
    c_ = 1;
    a = 1*(6 + 5);
    z = 5;
    p = [[1,2],[z*9,7],[1,1],[4,5]];
    o = p;
    b = [2 * a, c_];
    zn = [5.0,4];
    dp = [1,2,3,4,5];
    c = [1,2,3]; # comment
    normal = [z + a, z+a, z+a];
    P = [10];
    
    p1 = [1,2,5];
    
end constants

regions   
    H = HalfSpace(p1,normal);
    B = Ellipsoid([[1,0,0],[0,1,0],[0,0,1]],p1);
    c = HalfSpace(p1,normal) & Empty();
    R2 = B & H | c;
    #Q = HalfSpace([1,2,3],p);
    R5 = H & R2 & c;
end regions

ap # bind regions to atomic propositions
	# this section specifies the regions (AP = {a, b, c})
    a <- B;
    b <- R5;
	c <- R5; 
end ap

letters # gives names to elements of 2^(AP)
   # e <- [];
    # atomic props = {a, b, c}
	# alphabet = {{}, {a}, {b}, {c}, {a, b}, {a, c}, {b, c}, {a, b, c}}
	#               !a <=> {b, c}
	#               b & c <=> {b, c}
	#               a & !c <=> not allowed
	# here we can have at most 8 definitions
    A = {a};
    B = {a,b}; # a subset of AP, or equivalently an element of 2^AP
    Q = {};
    #C = {b};
    D = {a};
end letters

system
    B = [1,2,3,6,7];
    A = p;
end system

specifications
	#are RE over 2^(AP), where each letter is either a name (sigma1) or a subset of AP (element of 2^AP)
    #phi1 = RE(ABC);
    phi2 = RE(A*B*CB*CB*BBCC*CA);
    #phh = RE();
    #phi3 = RE(B);
    #phi4 = RE(A);
    #phi5 = RE(*);
end specifications
